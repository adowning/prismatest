datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  role      Role
  Comment   Comment[]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

enum OrderType {
  ESTIMATE
  INVOICE
  VOIDED
  WORKORER
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?

  Workorder   Workorder? @relation(fields: [workorderId], references: [id])
  workorderId String?
}

model Workorder {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  imported          Boolean?
  orderID           String
  accountID         String
  accountName       String
  address1          String?
  refNumber         String?
  city              String?
  state             String?
  zip               Int?
  companyID         String?
  correction        Int?
  createdBy         String?
  createdOn         DateTime?
  dateCreated       DateTime?
  balanceDue        Int?
  grandTotal        Int?
  orderNumber       Int
  orderType         OrderType?
  originalType      OrderType?
  postToAccounting  Boolean?
  salesRepID        String?
  siteID            String?
  subTotal          Int?
  taxID             String?
  taxRate           Int?
  taxTotal          Int?
  userName          String?
  merchantFeesTotal Int?
  comments          Comment[]

}

enum Role {
  ADMIN
  USER
}
